# Main GRUB config

# Set the prefix back to the correct value after we're done with memdisk
set prefix=($root)/coreos/grub

# Load any and all video drivers.
# Required under UEFI to boot Linux with a working console.
insmod all_video

# Default menuentry id and boot timeout
set default="coreos"
set timeout=1

# Default kernel args for root filesystem and console.
set linux_root="root=LABEL=ROOT"
set linux_console=""

# Anything else the OEM adds should use this variable.
set linux_append=""

set secure_boot="0"

if [ "$grub_platform" = "efi" ]; then
   getenv -e SecureBoot -g 8be4df61-93ca-11d2-aa0d-00e098032b8c -b sb
   getenv -e SetupMode -g 8be4df61-93ca-11d2-aa0d-00e098032b8c -b setupmode
   if [ "$sb" = "01" -a "$setupmode" = "00" ]; then
      set secure_boot="1"
   fi
fi

# Search for the OEM partition, load additional configuration if found.
if [ "$secure_boot" = "0" ]; then
   search --no-floppy --set oem --part-label OEM --hint "$root"
   if [ -n "$oem" -a -f "($oem)/grub.cfg" ]; then
       source "($oem)/grub.cfg"
   fi
fi

# If no specific console has been set by the OEM then select based on
# platform, most systems use vga text as primary and ttyS0 as secondary.
if [ -z "$linux_console" ]; then
    if [ "$grub_platform" = pc ]; then
        set linux_console="console=ttyS0,115200n8 console=tty0"
        serial com0 --speed=115200 --word=8 --parity=no
        terminal_input console serial_com0
        terminal_output console serial_com0
    elif [ "$grub_platform" = efi ]; then
        set linux_console="console=ttyS0,115200n8 console=tty0"
    elif [ "$grub_platform" = xen ]; then
        set linux_console="console=hvc0"
    fi
fi

# UEFI uses linuxefi/initrdefi instead of linux/initrd
if [ "$grub_platform" = efi ]; then
    set suf="efi"
else
    set suf=""
fi

menuentry "CoreOS default" --id=coreos {
    gptprio.next -d usr -u usr_uuid
    if [ "$usr_uuid" = "7130c94a-213a-4e5a-8e26-6cce9662f132" ]; then
       linux$suf /coreos/vmlinuz-a $linux_console $linux_root \
            mount.usr=PARTUUID=$usr_uuid $linux_append
    else
       linux$suf /coreos/vmlinuz-b $linux_console $linux_root \
            mount.usr=PARTUUID=$usr_uuid $linux_append
    fi
}

menuentry "CoreOS USR-A" --id=coreos-a {
    linux$suf /coreos/vmlinuz-a $linux_console $linux_root \
         mount.usr=PARTLABEL=USR-A $linux_append
}

menuentry "CoreOS USR-B" --id=coreos-b {
    linux$suf /coreos/vmlinuz-b $linux_console $linux_root \
         mount.usr=PARTLABEL=USR-B $linux_append
}
